<UserControl x:Class="Indigo.DesktopClient.View.Partial.AddDocumentView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ignore="http://www.ignore.com"
        xmlns:ig="http://schemas.infragistics.com/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:DragDrop="clr-namespace:Indigo.DesktopClient.Framework"
        xmlns:penthouseModels="clr-namespace:Indigo.DesktopClient.Model.PenthouseModels"
        mc:Ignorable="d ignore"
        DataContext="{Binding AddDocumentViewModel, Source={StaticResource Locator}}">

    <UserControl.Resources>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource FlatButtonBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource FlatButtonForegroundBrush}"/>
            <Setter Property="FontSize" Value="{DynamicResource FlatButtonFontSize}"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Margin="0">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background)" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <SolidColorBrush Color="#FFE7E7E7"/>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource FlatButtonPressedForegroundBrush}"/>
                                <Setter Property="Background" TargetName="Border" Value="#FFE7E7E7"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource GrayBrush2}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource FlatButtonBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource FlatButtonForegroundBrush}"/>
            <Setter Property="FontSize" Value="{DynamicResource FlatButtonFontSize}"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Margin="0">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background)" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <SolidColorBrush Color="#FFE7E7E7"/>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource FlatButtonPressedForegroundBrush}"/>
                                <Setter Property="Background" TargetName="Border" Value="#FFE7E7E7"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource GrayBrush2}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding Path=IsDocumentSelected}" Value="False">
                                <Setter Property="IsEnabled" Value="False"></Setter>
                                <Setter Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DisplayNameStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="FontFamily" Value="Segoe UI"></Setter>
            <Setter Property="VerticalAlignment" Value="Bottom"></Setter>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Setter Property="Margin" Value="10,0,0,0"></Setter>
        </Style>
        <Style x:Key="DisplayDescriptionStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="12"></Setter>
            <Setter Property="FontFamily" Value="Segoe UI"></Setter>
            <Setter Property="Foreground" Value="Gray"></Setter>
            <Setter Property="VerticalAlignment" Value="Bottom"></Setter>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Setter Property="Margin" Value="10,0,0,0"></Setter>
        </Style>
        <Style x:Key="DisplayHederStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="FontFamily" Value="Segoe UI"></Setter>
            <Setter Property="FontWeight" Value="Bold"></Setter>
            <Setter Property="VerticalAlignment" Value="Bottom"></Setter>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        </Style>

        <DataTemplate x:Key="DragTemplate">
            <!--<DataTemplate.Resources>
                <Style TargetType="Image">
                    <Setter Property="Width" Value="50" />
                    <Setter Property="Height" Value="50" />
                    <Setter Property="Margin" Value="5" />
                </Style>
            </DataTemplate.Resources>-->
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Path=Word}"/>
                <TextBlock Text="{Binding Path=Count}"/>
            </StackPanel>
        </DataTemplate>
        
        <DataTemplate DataType="{x:Type penthouseModels:SubjectModel}">
            
        </DataTemplate>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <ToolBar Grid.Row="0" Height="68">
            <Button Command="{Binding Path=LoadDocumentCommand}" Style="{DynamicResource ButtonStyle1}">
                <Button.Content>
                    <Image Source="../../Images/file-add-icon-128x128.png" Width="50" Height="50"></Image>
                </Button.Content>
            </Button>

            <Button Command="{Binding Path=AnalysDocumentCommand}" Style="{DynamicResource ButtonStyle2}">
                <Button.Content>
                    <Image Source="../../Images/play-icon---64x64.png" Width="50" Height="50"></Image>
                </Button.Content>
            </Button>
        </ToolBar>
        
        <Grid x:Name="grdAnalysPanel" Grid.Row="1" Margin="15,15,15,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=IsDocumentSelected}" Value="False">
                            <Setter Property="Visibility" Value="Hidden"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>

            <StackPanel Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Left" Orientation="Horizontal" Margin="0,10">
                <Image Source="../../Images/file-icon-28x32.png" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,10,0"/>
                <TextBlock Text="{Binding Path=SelectedDocumentModel.FileName}">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="HorizontalAlignment" Value="Left"/>
                            <Setter Property="FontSize" Value="16"/>
                            <Setter Property="FontFamily" Value="Segoe UI"/>
                            <Setter Property="FontWeight" Value="DemiBold"/>
                            <Setter Property="Foreground" Value="#222222"/>
                            <Setter Property="Margin" Value="0,0,10,5"/>
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="Height" Value="18"/>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <TextBlock Text="{Binding Path=SelectedDocumentModel.SizeAsString}">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="HorizontalAlignment" Value="Left"/>
                            <Setter Property="FontSize" Value="14"/>
                            <Setter Property="FontFamily" Value="Segoe UI"/>
                            <Setter Property="Foreground" Value="#696969"/>
                            <Setter Property="Margin" Value="0,0,0,5"/>
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="Height" Value="18"/>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </StackPanel>
            
            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <TextBlock Text="Тематики" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                <TextBlock Grid.Row="0" Grid.Column="1" Text="Ключевые слова документа" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                <ListView Grid.Row="1" Grid.Column="0" ItemsSource="{Binding Path=Subjects}"
                          DragDrop:DragDropHelper.IsDropTarget="True" DragDrop:DragDropHelper.IsDragSource="True"
                          DragDrop:DragDropHelper.DragDropTemplate="{StaticResource DragTemplate}"
                          AllowDrop="True">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Text="{Binding Path=SubjectHeader}"></TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                
                <StackPanel Grid.Row="1" Grid.Column="1">
                    <TextBlock Text="{Binding Path=TargetSubject}"></TextBlock>
                </StackPanel>
                
                <ListView x:Name="lstKeyWords" Grid.Row="1" Grid.Column="2" ItemsSource="{Binding Path=KeyWords}" Height="300"
                          DragDrop:DragDropHelper.IsDropTarget="True" DragDrop:DragDropHelper.IsDragSource="True"
                          DragDrop:DragDropHelper.DragDropTemplate="{StaticResource DragTemplate}">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Path=Word}"/>
                                <TextBlock Text="{Binding Path=Count}"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
