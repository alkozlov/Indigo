<UserControl x:Class="Indigo.DesktopClient.View.DocumentAnalysisView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ignore="http://www.ignore.com"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:ig="http://schemas.infragistics.com/xaml"
        mc:Ignorable="d ignore"
        DataContext="{Binding DocumentAnalysisViewModel, Source={StaticResource Locator}}">
    
    <UserControl.Resources>
        <Style x:Key="DisplayNameStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="FontFamily" Value="Segoe UI"></Setter>
            <Setter Property="VerticalAlignment" Value="Bottom"></Setter>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Setter Property="Margin" Value="10,0,0,0"></Setter>
        </Style>
        <Style x:Key="DisplayDescriptionStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="12"></Setter>
            <Setter Property="FontFamily" Value="Segoe UI"></Setter>
            <Setter Property="Foreground" Value="Gray"></Setter>
            <Setter Property="VerticalAlignment" Value="Bottom"></Setter>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Setter Property="Margin" Value="10,0,0,0"></Setter>
        </Style>
        <Style x:Key="DisplayHederStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="FontFamily" Value="Segoe UI"></Setter>
            <Setter Property="FontWeight" Value="Bold"></Setter>
            <Setter Property="VerticalAlignment" Value="Bottom"></Setter>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        </Style>

        <Storyboard x:Key="SettingPanelExpand">
            <DoubleAnimation 
                Storyboard.TargetName="flyout"
                Storyboard.TargetProperty="(Grid.Width)" 
                From="0" To="300" Duration="0:0:0.2" AutoReverse="False"/>
        </Storyboard>
        <Storyboard x:Key="SettingPanelCollapse">
            <DoubleAnimation 
                Storyboard.TargetName="flyout"
                Storyboard.TargetProperty="(Grid.Width)" 
                From="300" To="0" Duration="0:0:0.2" AutoReverse="False"/>
        </Storyboard>
        <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
        	<Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
        	<Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
        	<Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        	<Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
        	<Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
        	<Setter Property="FontWeight" Value="Bold"/>
        	<Setter Property="Padding" Value="5,6"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Width" Value="50"/>
        	<Setter Property="Height" Value="50"/>
        	<Setter Property="Margin" Value="5"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type ToggleButton}">
        				<Grid>
        					<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="CommonStates">
        							<VisualState x:Name="Normal"/>
        							<VisualState x:Name="MouseOver">
        								<Storyboard>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverBorder">
        										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
        									</DoubleAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Pressed">
        								<Storyboard>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedBorder">
        										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
        									</DoubleAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Disabled">
        								<Storyboard>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement">
        										<SplineDoubleKeyFrame KeyTime="0" Value="0.55"/>
        									</DoubleAnimationUsingKeyFrames>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
        										<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
        									</DoubleAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="CheckStates">
        							<VisualState x:Name="Checked">
        								<Storyboard>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckedRectangle">
        										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
        									</DoubleAnimationUsingKeyFrames>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckedInnerRectangle">
        										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
        									</DoubleAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Unchecked"/>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="FocusStates">
        							<VisualState x:Name="Focused">
        								<Storyboard>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle">
        										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
        									</DoubleAnimationUsingKeyFrames>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusInnerRectangle">
        										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
        									</DoubleAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Unfocused"/>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
        					<Border x:Name="Background" CornerRadius="3" Background="{x:Null}"/>
        					<Rectangle x:Name="DisabledVisualElement" Fill="{x:Null}" IsHitTestVisible="False" Opacity="0" RadiusY="3" RadiusX="3"/>
        					<Border x:Name="MouseOverBorder" Background="{x:Null}" CornerRadius="3.5" Opacity="0"/>
        					<Border x:Name="PressedBorder" Background="{x:Null}" CornerRadius="3.5" Opacity="0"/>
        					<Border x:Name="CheckedBorder" Background="{x:Null}" CornerRadius="3.5" Opacity="0"/>
        					<Rectangle x:Name="FocusRectangle" Opacity="0" RadiusY="4" RadiusX="4" Stroke="{x:Null}" StrokeThickness="0"/>
        					<Rectangle x:Name="FocusInnerRectangle" Opacity="0" RadiusY="3" RadiusX="3" Stroke="{x:Null}" StrokeThickness="0"/>
        					<Rectangle x:Name="CheckedRectangle" Opacity="0" RadiusY="4" RadiusX="4" Stroke="{x:Null}" StrokeThickness="0"/>
        					<Rectangle x:Name="CheckedInnerRectangle" Fill="{x:Null}" Opacity="0" RadiusY="3" RadiusX="3" Stroke="{x:Null}" StrokeThickness="0"/>
        					<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        				</Grid>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
            
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Content">
                        <Setter.Value>
                            <StackPanel VerticalAlignment="Stretch" HorizontalAlignment="Left" Width="50" Height="50">
                                <Canvas VerticalAlignment="Top" HorizontalAlignment="Left">
                                    <Ellipse Width="50" Height="50" Fill="White"></Ellipse>
                                    <Ellipse Width="40" Height="40" Fill="#222222" Canvas.Top="5" Canvas.Left="5"></Ellipse>
                                </Canvas>
                                <Image Width="24" Height="24" Margin="0,12,0,0" Source="../Images/NavigationArrow - Previous - White - 16x16.png"/>
                            </StackPanel>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="HorizontalTick">
            <Border >
                <TextBlock Text="{Binding}" Margin="0,25,0,0" Foreground="White"/>
            </Border>
        </DataTemplate>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
        	<Setter Property="Background" Value="{DynamicResource FlatButtonBackgroundBrush}"/>
        	<Setter Property="Foreground" Value="{DynamicResource FlatButtonForegroundBrush}"/>
        	<Setter Property="FontSize" Value="{DynamicResource FlatButtonFontSize}"/>
        	<Setter Property="Padding" Value="10,5"/>
        	<Setter Property="BorderThickness" Value="0"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Margin="0">
        					<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="CommonStates">
        							<VisualState x:Name="Normal"/>
        							<VisualState x:Name="MouseOver">
        								<Storyboard>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background)" Storyboard.TargetName="Border">
        										<DiscreteObjectKeyFrame KeyTime="0">
        											<DiscreteObjectKeyFrame.Value>
        												<SolidColorBrush Color="#FFE7E7E7"/>
        											</DiscreteObjectKeyFrame.Value>
        										</DiscreteObjectKeyFrame>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Pressed"/>
        							<VisualState x:Name="Disabled"/>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
        					<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        				</Border>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsPressed" Value="True">
        						<Setter Property="Foreground" Value="{DynamicResource FlatButtonPressedForegroundBrush}"/>
        						<Setter Property="Background" TargetName="Border" Value="#FFE7E7E7"/>
        					</Trigger>
        					<Trigger Property="IsEnabled" Value="False">
        						<Setter Property="Foreground" Value="{DynamicResource GrayBrush2}"/>
        					</Trigger>
        					<Trigger Property="IsMouseOver" Value="True">
        						<Setter Property="Background" Value="DarkGray"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource FlatButtonBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource FlatButtonForegroundBrush}"/>
            <Setter Property="FontSize" Value="{DynamicResource FlatButtonFontSize}"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Margin="0">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background)" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <SolidColorBrush Color="#FFE7E7E7"/>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource FlatButtonPressedForegroundBrush}"/>
                                <Setter Property="Background" TargetName="Border" Value="#FFE7E7E7"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource GrayBrush2}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding Path=IsDocumentSelected}" Value="False">
                                <Setter Property="IsEnabled" Value="False"></Setter>
                                <Setter Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Row="0" Grid.Column="1" Margin="15,0,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <ToolBar Grid.Row="0" Height="68">
                <Button Command="{Binding Path=LoadDocumentCommand}" Style="{DynamicResource ButtonStyle1}">
                    <Button.Content>
                        <Image Source="../Images/file-add-icon-128x128.png" Width="50" Height="50"></Image>
                    </Button.Content>
                </Button>

                <Button Command="{Binding Path=AnalysDocumentCommand}" Style="{DynamicResource ButtonStyle2}">
                    <Button.Content>
                        <Image Source="../Images/play-icon---64x64.png" Width="50" Height="50"></Image>
                    </Button.Content>
                </Button>
            </ToolBar>
            
            <Grid Row="1" Margin="0,20,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Image Grid.RowSpan="4" Source="{Binding Path=DocumentAnalysisModel.Thumbnail}"
                       Width="100" Height="100" VerticalAlignment="Center" HorizontalAlignment="Center"></Image>

                <Grid Grid.Row="0" Grid.Column="1" HorizontalAlignment="Left">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <TextBlock Text="{Binding Path=DocumentAnalysisModel.FileName}">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="HorizontalAlignment" Value="Left"/>
                                <Setter Property="FontSize" Value="16"/>
                                <Setter Property="FontFamily" Value="Segoe UI"/>
                                <Setter Property="FontWeight" Value="DemiBold"/>
                                <Setter Property="Foreground" Value="#222222"/>
                                <Setter Property="Margin" Value="0,0,0,5"/>
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="Height" Value="18"/>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <TextBlock Grid.Row="1" Text="{Binding Path=DocumentAnalysisModel.Directory}">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="HorizontalAlignment" Value="Left"/>
                                <Setter Property="FontSize" Value="14"/>
                                <Setter Property="FontFamily" Value="Segoe UI"/>
                                <Setter Property="Foreground" Value="#696969"/>
                                <Setter Property="Margin" Value="0,0,0,5"/>
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="Height" Value="18"/>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <TextBlock Grid.Row="2" Text="{Binding Path=DocumentAnalysisModel.SizeAsString}">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="HorizontalAlignment" Value="Left"/>
                                <Setter Property="FontSize" Value="14"/>
                                <Setter Property="FontFamily" Value="Segoe UI"/>
                                <Setter Property="Foreground" Value="#696969"/>
                                <Setter Property="Margin" Value="0,0,0,5"/>
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="Height" Value="18"/>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </Grid>
            
            <Grid Grid.Row="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                
                <ListView ItemsSource="{Binding Path=SimilarDocuments}">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Text="{Binding Path=DocumentName}"></TextBlock>
                                <TextBlock Text="{Binding Path=SimilarityValue}"></TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                
                <ig:XamDataChart Grid.Row="1" Height="500">
                    <ig:XamDataChart.Axes>
                        <ig:NumericXAxis x:Name="XAxis" 
                                 MinimumValue="-1" MaximumValue="1" Interval="0.05">
                        </ig:NumericXAxis>
                        <ig:NumericYAxis x:Name="YAxis" MinimumValue="-1" MaximumValue="1" Interval="0.05">
                        </ig:NumericYAxis>
                    </ig:XamDataChart.Axes>
                    <ig:XamDataChart.Series>
                        <ig:BubbleSeries XMemberPath="X"
                                 YMemberPath="Y"
                                 MarkerType="Circle"
                                 XAxis="{Binding ElementName=XAxis}"
                                 YAxis="{Binding ElementName=YAxis}"
                                 Title="High Income"
                                 ItemsSource="{Binding Path=LsaMap}"
                                 RadiusMemberPath="Radius"
                                 FillMemberPath="Radius">

                            <ig:BubbleSeries.RadiusScale>
                                <ig:SizeScale IsLogarithmic="False" MaximumValue="25" MinimumValue="15"/>
                            </ig:BubbleSeries.RadiusScale>
                            <ig:BubbleSeries.FillScale>
                                <ig:CustomPaletteBrushScale BrushSelectionMode="Interpolate">
                                    <ig:CustomPaletteBrushScale.Brushes>
                                        <ig:BrushCollection>
                                            <SolidColorBrush Color="#FFC6EEFB" />
                                            <SolidColorBrush Color="#FF084CFE" />
                                        </ig:BrushCollection>
                                    </ig:CustomPaletteBrushScale.Brushes>
                                </ig:CustomPaletteBrushScale>
                            </ig:BubbleSeries.FillScale>
                            <ig:BubbleSeries.ToolTip>
                                <Grid>
                                    <StackPanel Orientation="Vertical" >
                                        <TextBlock Margin="2" FontWeight="Bold" Text="{Binding Item.DocumentName}"></TextBlock>
                                    </StackPanel>
                                </Grid>
                            </ig:BubbleSeries.ToolTip>
                        </ig:BubbleSeries>
                    </ig:XamDataChart.Series>
                </ig:XamDataChart>
            </Grid>
        </Grid>
        
        <!-- Flyout element -->
        <Grid Grid.Row="0" Grid.Column="0" Background="#222222">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Grid x:Name="container" Grid.Column="1">
                <StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <ToggleButton Style="{DynamicResource ToggleButtonStyle1}" Padding="0">
                        <ToggleButton.Triggers>
                            <EventTrigger RoutedEvent="ToggleButton.Checked">
                                <BeginStoryboard Storyboard="{StaticResource SettingPanelExpand}"></BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                                <BeginStoryboard Storyboard="{StaticResource SettingPanelCollapse}"></BeginStoryboard>
                            </EventTrigger>
                        </ToggleButton.Triggers>
                        
                        <ToggleButton.Content>
                            <StackPanel VerticalAlignment="Stretch" HorizontalAlignment="Left" Width="50" Height="50">
                                <Canvas VerticalAlignment="Top" HorizontalAlignment="Left">
                                    <Ellipse Width="50" Height="50" Fill="White"></Ellipse>
                                    <Ellipse Width="40" Height="40" Fill="#222222" Canvas.Top="5" Canvas.Left="5"></Ellipse>
                                </Canvas>
                                <Image Width="24" Height="24" Margin="0,12,0,0" Source="../Images/NavigationArrow - Next - White - 16x16.png"/>
                            </StackPanel>
                        </ToggleButton.Content>
                    </ToggleButton>
                </StackPanel>
            </Grid>

            <Grid Grid.Column="0" Grid.Row="1" x:Name="flyout" Width="0" HorizontalAlignment="Left" VerticalAlignment="Stretch">
                <StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <TextBlock Text="Настройки анализа" Foreground="White" Margin="10,10,0,20" FontSize="24"/>
                    
                    <Grid Margin="10,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <TextBlock Text="Размер шингла:" Foreground="White" FontSize="14" Margin="0,0,0,15"></TextBlock>
                        
                        <ig:XamNumericRangeSlider MinValue="3" MaxValue="10" Grid.Row="1">
                            <ig:XamNumericRangeSlider.TickMarks>
                                <ig:SliderTickMarks TickMarksFrequency="1" UseFrequency="True"/>
                                <ig:SliderTickMarks TickMarksFrequency="1" UseFrequency="True" HorizontalTickMarksTemplate="{StaticResource HorizontalTick}"/>
                            </ig:XamNumericRangeSlider.TickMarks>
                            <ig:XamSliderNumericThumb Value="{Binding Path=AnalysisPanelSettings.ShingleSize, Mode=TwoWay}"
                                                      TrackFillBrush="Tomato" InteractionMode="Push"></ig:XamSliderNumericThumb>
                        </ig:XamNumericRangeSlider>
                    </Grid>
                    
                    <Grid Margin="10,30,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <TextBlock Text="Минимальный порог совпадения, %:" Foreground="White" FontSize="14" Margin="0,0,0,15"></TextBlock>
                        
                        <controls:NumericUpDown Grid.Row="1" Minimum="1" Maximum="100" IsReadOnly="True" Background="White"
                                                Value="{Binding Path=AnalysisPanelSettings.MinimalSimilarityLevel, Mode=TwoWay}">
                        </controls:NumericUpDown>
                    </Grid>
                </StackPanel>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
