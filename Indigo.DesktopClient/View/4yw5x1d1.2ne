<UserControl x:Class="Indigo.DesktopClient.View.DocumentAnalysisView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ignore="http://www.ignore.com"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        mc:Ignorable="d ignore"
        DataContext="{Binding DocumentAnalysisViewModel, Source={StaticResource Locator}}">
    
    <UserControl.Resources>
        <Style x:Key="DisplayNameStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="FontFamily" Value="Segoe UI"></Setter>
            <Setter Property="VerticalAlignment" Value="Bottom"></Setter>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Setter Property="Margin" Value="10,0,0,0"></Setter>
        </Style>
        <Style x:Key="DisplayDescriptionStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="12"></Setter>
            <Setter Property="FontFamily" Value="Segoe UI"></Setter>
            <Setter Property="Foreground" Value="Gray"></Setter>
            <Setter Property="VerticalAlignment" Value="Bottom"></Setter>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Setter Property="Margin" Value="10,0,0,0"></Setter>
        </Style>
        <Style x:Key="DisplayHederStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="FontFamily" Value="Segoe UI"></Setter>
            <Setter Property="FontWeight" Value="Bold"></Setter>
            <Setter Property="VerticalAlignment" Value="Bottom"></Setter>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        </Style>

        <Storyboard x:Key="SettingPanelExpand">
            <DoubleAnimation 
                Storyboard.TargetName="flyout"
                Storyboard.TargetProperty="(Grid.Width)" 
                From="0" To="300" Duration="0:0:0.2" AutoReverse="False"/>
        </Storyboard>
        <Storyboard x:Key="SettingPanelCollapse">
            <DoubleAnimation 
                Storyboard.TargetName="flyout"
                Storyboard.TargetProperty="(Grid.Width)" 
                From="300" To="0" Duration="0:0:0.2" AutoReverse="False"/>
        </Storyboard>
        <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
        	<Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
        	<Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
        	<Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        	<Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
        	<Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
        	<Setter Property="FontWeight" Value="Bold"/>
        	<Setter Property="Padding" Value="5,6"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Width" Value="50"/>
        	<Setter Property="Height" Value="50"/>
        	<Setter Property="Margin" Value="5"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type ToggleButton}">
        				<Grid>
        					<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="CommonStates">
        							<VisualState x:Name="Normal"/>
        							<VisualState x:Name="MouseOver">
        								<Storyboard>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverBorder">
        										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
        									</DoubleAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Pressed">
        								<Storyboard>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedBorder">
        										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
        									</DoubleAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Disabled">
        								<Storyboard>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement">
        										<SplineDoubleKeyFrame KeyTime="0" Value="0.55"/>
        									</DoubleAnimationUsingKeyFrames>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
        										<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
        									</DoubleAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="CheckStates">
        							<VisualState x:Name="Checked">
        								<Storyboard>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckedRectangle">
        										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
        									</DoubleAnimationUsingKeyFrames>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckedInnerRectangle">
        										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
        									</DoubleAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Unchecked"/>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="FocusStates">
        							<VisualState x:Name="Focused">
        								<Storyboard>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle">
        										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
        									</DoubleAnimationUsingKeyFrames>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusInnerRectangle">
        										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
        									</DoubleAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Unfocused"/>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
        					<Border x:Name="Background" CornerRadius="3" Background="{x:Null}"/>
        					<Rectangle x:Name="DisabledVisualElement" Fill="{x:Null}" IsHitTestVisible="False" Opacity="0" RadiusY="3" RadiusX="3"/>
        					<Border x:Name="MouseOverBorder" Background="{x:Null}" CornerRadius="3.5" Opacity="0"/>
        					<Border x:Name="PressedBorder" Background="{x:Null}" CornerRadius="3.5" Opacity="0"/>
        					<Border x:Name="CheckedBorder" Background="{x:Null}" CornerRadius="3.5" Opacity="0"/>
        					<Rectangle x:Name="FocusRectangle" Opacity="0" RadiusY="4" RadiusX="4" Stroke="{x:Null}" StrokeThickness="0"/>
        					<Rectangle x:Name="FocusInnerRectangle" Opacity="0" RadiusY="3" RadiusX="3" Stroke="{x:Null}" StrokeThickness="0"/>
        					<Rectangle x:Name="CheckedRectangle" Opacity="0" RadiusY="4" RadiusX="4" Stroke="{x:Null}" StrokeThickness="0"/>
        					<Rectangle x:Name="CheckedInnerRectangle" Fill="{x:Null}" Opacity="0" RadiusY="3" RadiusX="3" Stroke="{x:Null}" StrokeThickness="0"/>
        					<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        				</Grid>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
            
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Content">
                        <Setter.Value>
                            <StackPanel VerticalAlignment="Stretch" HorizontalAlignment="Left" Width="50" Height="50">
                                <Canvas VerticalAlignment="Top" HorizontalAlignment="Left">
                                    <Ellipse Width="50" Height="50" Fill="White"></Ellipse>
                                    <Ellipse Width="40" Height="40" Fill="#222222" Canvas.Top="5" Canvas.Left="5"></Ellipse>
                                </Canvas>
                                <Image Width="24" Height="24" Margin="0,12,0,0" Source="../Images/NavigationArrow - Previous - White - 16x16.png"/>
                            </StackPanel>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Button Grid.Row="0" Grid.Column="1" Content="Выбрать документ" Height="50" Width="150" Style="{DynamicResource SquareButtonStyle}"
                Command="{Binding Path=LoadDocumentComand}" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0,10,0,20"></Button>

        <DockPanel Grid.Row="1" Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Left" Height="Auto"
                   Visibility="{Binding Path=IsDocumentSelected}" Margin="10,10,0,0">
            <Image Source="{Binding Path=DocumentAnalysisModel.Thumbnail}" Width="150" Height="150" VerticalAlignment="Top" HorizontalAlignment="Left"></Image>
            <Grid Margin="10,0,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <DockPanel Grid.Row="0" Grid.Column="1">
                    <TextBlock Text="Имя файла:" Style="{StaticResource DisplayHederStyle}"></TextBlock>
                    <TextBlock Text="{Binding Path=DocumentAnalysisModel.FileName}" Style="{StaticResource DisplayNameStyle}"></TextBlock>
                    <TextBlock Text="{Binding Path=DocumentAnalysisModel.SizeAsString}" Margin="10,0,0,0" Style="{StaticResource DisplayDescriptionStyle}"></TextBlock>
                </DockPanel>

                <DockPanel Grid.Row="1" Grid.Column="1">
                    <TextBlock Text="Расположение:" Style="{StaticResource DisplayHederStyle}"></TextBlock>
                    <TextBlock Text="{Binding Path=DocumentAnalysisModel.Directory}" Style="{StaticResource DisplayNameStyle}"></TextBlock>
                </DockPanel>

                <DockPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,10,0,10" VerticalAlignment="Bottom">
                    <Button VerticalAlignment="Bottom" HorizontalAlignment="Center" Width="Auto" Height="Auto" Content="Анализ текста"
                             Style="{DynamicResource SquareButtonStyle}" Command="{Binding Path=AnalysDocumentCommand, IsAsync=True}"></Button>
                </DockPanel>
            </Grid>
        </DockPanel>
        
        <!-- Flyout element -->
        <Grid Grid.Row="0" Grid.RowSpan="4" Grid.Column="0" Background="#222222">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Grid x:Name="container" Grid.Column="1">
                <StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <ToggleButton Style="{DynamicResource ToggleButtonStyle1}" Padding="0">
                        <ToggleButton.Triggers>
                            <EventTrigger RoutedEvent="ToggleButton.Checked">
                                <BeginStoryboard Storyboard="{StaticResource SettingPanelExpand}"></BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                                <BeginStoryboard Storyboard="{StaticResource SettingPanelCollapse}"></BeginStoryboard>
                            </EventTrigger>
                        </ToggleButton.Triggers>
                        
                        <ToggleButton.Content>
                            <StackPanel VerticalAlignment="Stretch" HorizontalAlignment="Left" Width="50" Height="50">
                                <Canvas VerticalAlignment="Top" HorizontalAlignment="Left">
                                    <Ellipse Width="50" Height="50" Fill="White"></Ellipse>
                                    <Ellipse Width="40" Height="40" Fill="#222222" Canvas.Top="5" Canvas.Left="5"></Ellipse>
                                </Canvas>
                                <Image Width="24" Height="24" Margin="0,12,0,0" Source="../Images/NavigationArrow - Next - White - 16x16.png"/>
                            </StackPanel>
                        </ToggleButton.Content>
                    </ToggleButton>
                </StackPanel>
            </Grid>

            <Grid Grid.Column="0" Grid.Row="1" x:Name="flyout" Width="0" HorizontalAlignment="Left" VerticalAlignment="Stretch">
                <StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <TextBlock Text="Settings" Foreground="White"/>
                </StackPanel>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
